groups:
  pogoda:
    name: 'Pogoda'
    view: yes
    icon: mdi:cloud
    entities:
      - group.airly

  airly:
    name: 'Stacja pogoda Airly'
    entities:
      - sensor.airly_quality
      - sensor.airly_level
      - sensor.airly_description
      - sensor.airly_temperature
      - sensor.airly_humidity
      - sensor.airly_pressure
      - sensor.airly_pm1
      - sensor.airly_pm25
      - sensor.airly_pm10
sensor:
  - platform: rest
    scan_interval: 900
    name: Airly
    resource: https://airapi.airly.eu/v2/measurements/nearest?lat=49.72347&lng=22.04834&maxDistanceKM=5
    value_template: "{{ value_json['current']['values'][0]['value'] }} {{ value_json['current']['values'][1]['value'] }} {{ value_json['current']['values'][2]['value'] }} {{ value_json['current']['values'][3]['value'] }} {{ value_json['current']['values'][4]['value'] }} {{ value_json['current']['values'][5]['value'] }} {{ value_json['current']['indexes'][0]['level'] }} {{ value_json['current']['indexes'][0]['value'] }} {{ value_json['current']['indexes'][0]['description'] }}"
    headers:
    apikey: API_AIRLY
    Accept-Language: pl
  - platform: rest
    name: GiosAir
    #curl -X GET     --header 'Accept: application/json'  http://api.gios.gov.pl/pjp-api/rest/station/sensors/295
    resource:  http://api.gios.gov.pl/pjp-api/rest/data/getData/2069
    value_template: "{{ value_json['values'][1]['value'] }}"
    icon_template: mdi:jquery
    unit_of_measurement: "μg/m3"
input_number:
  air_red:
    name: Slider
    initial: 1000
    min: 0
    max: 5000
    step: 100
automation:
  - alias: "Status Powietrza"
    initial_state: True
    trigger:
      - platform: numeric_state
        entity_id: sensor.giosair
        above: 40
        for:
          minutes: 15
    action:
      - service: notify.email_kanapka
        data:
          title: 'Jakość Powietrza'
          message: "Uważaj na siebie powietrze nie jest za czyste {{states.sensor.giosair.state}} PM"
  - alias: "Salka1 -LED "
    initial_state: true
    trigger:
      - platform: time_pattern
        minutes: '1'
    condition:
      condition: numeric_state
      entity_id: sensor.salka1_air
      above: input_number.air_red
    action:
      - service: light.turn_on
        data:
          brightness: 255
          rgb_color: [255, 0, 0]
          entity_id:
            - light.salkastatus
